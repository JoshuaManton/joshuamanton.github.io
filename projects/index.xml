<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Joshua Manton</title>
    
    
    
    <link>/projects/</link>
    <description>Recent content in Projects on Joshua Manton</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Oct 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Untitled Puzzle Game</title>
      <link>/projects/mathy-robot-guy/</link>
      <pubDate>Sat, 17 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/projects/mathy-robot-guy/</guid>
      <description>
        
          &lt;img src=&#34;/img/mathy-robot-guy.png&#34;/&gt;
          
        
        
        
          A game where you push blocks around and use the power of mathematics to interact with the world around you and solve puzzles. A playable prototype is available here (todo(josh)) and I encourage you to play before reading on.
Basic Gameplay   The video above demonstrates the basic mechanics of the game. You move characters around on a 3D grid, pushing blocks around to get all the characters to the exit, which are the yellow tiles you see on the right of the level.
          
        
        </description>
    </item>
    
    <item>
      <title>Untitled Compiler</title>
      <link>/projects/compiler/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/projects/compiler/</guid>
      <description>
        
          &lt;img src=&#34;/img/compiler.png&#34;/&gt;
          
        
        
        
          A toy compiler project I started working on mostly to learn how compilers work. Turns out they are complicated.
This compiler implements a recursive-descent parser to parse source code into a syntax tree, typechecks the syntax tree and enforces the semantic rules of the language, generates an intermediate representation of the instruction stream and does register allocation, translates this intermediate representation to bytecode, and executes the bytecode in a virtual machine.
          
        
        </description>
    </item>
    
  </channel>
</rss>